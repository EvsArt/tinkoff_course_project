/**
 * Autogenerated by Avro
 * <p>
 * DO NOT EDIT DIRECTLY
 */

package edu.java.avro;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroLinkUpdateRequest extends org.apache.avro.specific.SpecificRecordBase
    implements org.apache.avro.specific.SpecificRecord {
    private static final long serialVersionUID = 620433307414054200L;

    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(
        "{\"type\":\"record\",\"name\":\"LinkUpdateRequest\",\"namespace\":\"edu.java\",\"fields\":[{\"name\":\"tgChatIds\",\"type\":{\"type\":\"array\",\"items\":\"long\"}},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}]}");

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    private static final SpecificData MODEL$ = new SpecificData();

    private static final BinaryMessageEncoder<AvroLinkUpdateRequest> ENCODER =
        new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

    private static final BinaryMessageDecoder<AvroLinkUpdateRequest> DECODER =
        new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

    /**
     * Return the BinaryMessageEncoder instance used by this class.
     * @return the message encoder used by this class
     */
    public static BinaryMessageEncoder<AvroLinkUpdateRequest> getEncoder() {
        return ENCODER;
    }

    /**
     * Return the BinaryMessageDecoder instance used by this class.
     * @return the message decoder used by this class
     */
    public static BinaryMessageDecoder<AvroLinkUpdateRequest> getDecoder() {
        return DECODER;
    }

    /**
     * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
     * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
     * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
     */
    public static BinaryMessageDecoder<AvroLinkUpdateRequest> createDecoder(SchemaStore resolver) {
        return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
    }

    /**
     * Serializes this LinkUpdateRequest to a ByteBuffer.
     * @return a buffer holding the serialized data for this instance
     * @throws java.io.IOException if this instance could not be serialized
     */
    public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
        return ENCODER.encode(this);
    }

    /**
     * Deserializes a LinkUpdateRequest from a ByteBuffer.
     * @param b a byte buffer holding serialized data for an instance of this class
     * @return a LinkUpdateRequest instance decoded from the given buffer
     * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
     */
    public static AvroLinkUpdateRequest fromByteBuffer(
        java.nio.ByteBuffer b
    ) throws java.io.IOException {
        return DECODER.decode(b);
    }

    private java.util.List<java.lang.Long> tgChatIds;
    private java.lang.CharSequence url;
    private java.lang.CharSequence description;

    /**
     * Default constructor.  Note that this does not initialize fields
     * to their default values from the schema.  If that is desired then
     * one should use <code>newBuilder()</code>.
     */
    public AvroLinkUpdateRequest() {
    }

    /**
     * All-args constructor.
     * @param tgChatIds The new value for tgChatIds
     * @param url The new value for url
     * @param description The new value for description
     */
    public AvroLinkUpdateRequest(
        java.util.List<java.lang.Long> tgChatIds,
        java.lang.CharSequence url,
        java.lang.CharSequence description
    ) {
        this.tgChatIds = tgChatIds;
        this.url = url;
        this.description = description;
    }

    @Override
    public org.apache.avro.specific.SpecificData getSpecificData() {
        return MODEL$;
    }

    @Override
    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    @Override
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return tgChatIds;
            case 1:
                return url;
            case 2:
                return description;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    // Used by DatumReader.  Applications should not call.
    @Override
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                tgChatIds = (java.util.List<java.lang.Long>) value$;
                break;
            case 1:
                url = (java.lang.CharSequence) value$;
                break;
            case 2:
                description = (java.lang.CharSequence) value$;
                break;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    /**
     * Gets the value of the 'tgChatIds' field.
     * @return The value of the 'tgChatIds' field.
     */
    public java.util.List<java.lang.Long> getTgChatIds() {
        return tgChatIds;
    }

    /**
     * Sets the value of the 'tgChatIds' field.
     * @param value the value to set.
     */
    public void setTgChatIds(java.util.List<java.lang.Long> value) {
        this.tgChatIds = value;
    }

    /**
     * Gets the value of the 'url' field.
     * @return The value of the 'url' field.
     */
    public java.lang.CharSequence getUrl() {
        return url;
    }

    /**
     * Sets the value of the 'url' field.
     * @param value the value to set.
     */
    public void setUrl(java.lang.CharSequence value) {
        this.url = value;
    }

    /**
     * Gets the value of the 'description' field.
     * @return The value of the 'description' field.
     */
    public java.lang.CharSequence getDescription() {
        return description;
    }

    /**
     * Sets the value of the 'description' field.
     * @param value the value to set.
     */
    public void setDescription(java.lang.CharSequence value) {
        this.description = value;
    }

    /**
     * Creates a new LinkUpdateRequest RecordBuilder.
     * @return A new LinkUpdateRequest RecordBuilder
     */
    public static AvroLinkUpdateRequest.Builder newBuilder() {
        return new AvroLinkUpdateRequest.Builder();
    }

    /**
     * Creates a new LinkUpdateRequest RecordBuilder by copying an existing Builder.
     * @param other The existing builder to copy.
     * @return A new LinkUpdateRequest RecordBuilder
     */
    public static AvroLinkUpdateRequest.Builder newBuilder(AvroLinkUpdateRequest.Builder other) {
        if (other == null) {
            return new AvroLinkUpdateRequest.Builder();
        } else {
            return new AvroLinkUpdateRequest.Builder(other);
        }
    }

    /**
     * Creates a new LinkUpdateRequest RecordBuilder by copying an existing LinkUpdateRequest instance.
     * @param other The existing instance to copy.
     * @return A new LinkUpdateRequest RecordBuilder
     */
    public static AvroLinkUpdateRequest.Builder newBuilder(AvroLinkUpdateRequest other) {
        if (other == null) {
            return new AvroLinkUpdateRequest.Builder();
        } else {
            return new AvroLinkUpdateRequest.Builder(other);
        }
    }

    /**
     * RecordBuilder for LinkUpdateRequest instances.
     */
    @org.apache.avro.specific.AvroGenerated
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroLinkUpdateRequest>
        implements org.apache.avro.data.RecordBuilder<AvroLinkUpdateRequest> {

        private java.util.List<java.lang.Long> tgChatIds;
        private java.lang.CharSequence url;
        private java.lang.CharSequence description;

        /** Creates a new Builder */
        private Builder() {
            super(SCHEMA$, MODEL$);
        }

        /**
         * Creates a Builder by copying an existing Builder.
         * @param other The existing Builder to copy.
         */
        private Builder(AvroLinkUpdateRequest.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.tgChatIds)) {
                this.tgChatIds = data().deepCopy(fields()[0].schema(), other.tgChatIds);
                fieldSetFlags()[0] = other.fieldSetFlags()[0];
            }
            if (isValidValue(fields()[1], other.url)) {
                this.url = data().deepCopy(fields()[1].schema(), other.url);
                fieldSetFlags()[1] = other.fieldSetFlags()[1];
            }
            if (isValidValue(fields()[2], other.description)) {
                this.description = data().deepCopy(fields()[2].schema(), other.description);
                fieldSetFlags()[2] = other.fieldSetFlags()[2];
            }
        }

        /**
         * Creates a Builder by copying an existing LinkUpdateRequest instance
         * @param other The existing instance to copy.
         */
        private Builder(AvroLinkUpdateRequest other) {
            super(SCHEMA$, MODEL$);
            if (isValidValue(fields()[0], other.tgChatIds)) {
                this.tgChatIds = data().deepCopy(fields()[0].schema(), other.tgChatIds);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.url)) {
                this.url = data().deepCopy(fields()[1].schema(), other.url);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.description)) {
                this.description = data().deepCopy(fields()[2].schema(), other.description);
                fieldSetFlags()[2] = true;
            }
        }

        /**
         * Gets the value of the 'tgChatIds' field.
         * @return The value.
         */
        public java.util.List<java.lang.Long> getTgChatIds() {
            return tgChatIds;
        }

        /**
         * Sets the value of the 'tgChatIds' field.
         * @param value The value of 'tgChatIds'.
         * @return This builder.
         */
        public AvroLinkUpdateRequest.Builder setTgChatIds(java.util.List<java.lang.Long> value) {
            validate(fields()[0], value);
            this.tgChatIds = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /**
         * Checks whether the 'tgChatIds' field has been set.
         * @return True if the 'tgChatIds' field has been set, false otherwise.
         */
        public boolean hasTgChatIds() {
            return fieldSetFlags()[0];
        }

        /**
         * Clears the value of the 'tgChatIds' field.
         * @return This builder.
         */
        public AvroLinkUpdateRequest.Builder clearTgChatIds() {
            tgChatIds = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /**
         * Gets the value of the 'url' field.
         * @return The value.
         */
        public java.lang.CharSequence getUrl() {
            return url;
        }

        /**
         * Sets the value of the 'url' field.
         * @param value The value of 'url'.
         * @return This builder.
         */
        public AvroLinkUpdateRequest.Builder setUrl(java.lang.CharSequence value) {
            validate(fields()[1], value);
            this.url = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /**
         * Checks whether the 'url' field has been set.
         * @return True if the 'url' field has been set, false otherwise.
         */
        public boolean hasUrl() {
            return fieldSetFlags()[1];
        }

        /**
         * Clears the value of the 'url' field.
         * @return This builder.
         */
        public AvroLinkUpdateRequest.Builder clearUrl() {
            url = null;
            fieldSetFlags()[1] = false;
            return this;
        }

        /**
         * Gets the value of the 'description' field.
         * @return The value.
         */
        public java.lang.CharSequence getDescription() {
            return description;
        }

        /**
         * Sets the value of the 'description' field.
         * @param value The value of 'description'.
         * @return This builder.
         */
        public AvroLinkUpdateRequest.Builder setDescription(java.lang.CharSequence value) {
            validate(fields()[2], value);
            this.description = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /**
         * Checks whether the 'description' field has been set.
         * @return True if the 'description' field has been set, false otherwise.
         */
        public boolean hasDescription() {
            return fieldSetFlags()[2];
        }

        /**
         * Clears the value of the 'description' field.
         * @return This builder.
         */
        public AvroLinkUpdateRequest.Builder clearDescription() {
            description = null;
            fieldSetFlags()[2] = false;
            return this;
        }

        @Override
        @SuppressWarnings("unchecked")
        public AvroLinkUpdateRequest build() {
            try {
                AvroLinkUpdateRequest record = new AvroLinkUpdateRequest();
                record.tgChatIds =
                    fieldSetFlags()[0] ? this.tgChatIds : (java.util.List<java.lang.Long>) defaultValue(fields()[0]);
                record.url = fieldSetFlags()[1] ? this.url : (java.lang.CharSequence) defaultValue(fields()[1]);
                record.description =
                    fieldSetFlags()[2] ? this.description : (java.lang.CharSequence) defaultValue(fields()[2]);
                return record;
            } catch (org.apache.avro.AvroMissingFieldException e) {
                throw e;
            } catch (java.lang.Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumWriter<AvroLinkUpdateRequest>
        WRITER$ = (org.apache.avro.io.DatumWriter<AvroLinkUpdateRequest>) MODEL$.createDatumWriter(SCHEMA$);

    @Override public void writeExternal(java.io.ObjectOutput out)
        throws java.io.IOException {
        WRITER$.write(this, SpecificData.getEncoder(out));
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumReader<AvroLinkUpdateRequest>
        READER$ = (org.apache.avro.io.DatumReader<AvroLinkUpdateRequest>) MODEL$.createDatumReader(SCHEMA$);

    @Override public void readExternal(java.io.ObjectInput in)
        throws java.io.IOException {
        READER$.read(this, SpecificData.getDecoder(in));
    }

    @Override protected boolean hasCustomCoders() {
        return true;
    }

    @Override public void customEncode(org.apache.avro.io.Encoder out)
        throws java.io.IOException {
        long size0 = this.tgChatIds.size();
        out.writeArrayStart();
        out.setItemCount(size0);
        long actualSize0 = 0;
        for (java.lang.Long e0 : this.tgChatIds) {
            actualSize0++;
            out.startItem();
            out.writeLong(e0);
        }
        out.writeArrayEnd();
        if (actualSize0 != size0) {
            throw new java.util.ConcurrentModificationException(
                "Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
        }

        out.writeString(this.url);

        out.writeString(this.description);

    }

    @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
        throws java.io.IOException {
        org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
        if (fieldOrder == null) {
            long size0 = in.readArrayStart();
            java.util.List<java.lang.Long> a0 = this.tgChatIds;
            if (a0 == null) {
                a0 = new SpecificData.Array<java.lang.Long>((int) size0, SCHEMA$.getField("tgChatIds").schema());
                this.tgChatIds = a0;
            } else {
                a0.clear();
            }
            SpecificData.Array<java.lang.Long> ga0 =
                (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Long>) a0 : null);
            for (; 0 < size0; size0 = in.arrayNext()) {
                for (; size0 != 0; size0--) {
                    java.lang.Long e0 = (ga0 != null ? ga0.peek() : null);
                    e0 = in.readLong();
                    a0.add(e0);
                }
            }

            this.url = in.readString(this.url instanceof Utf8 ? (Utf8) this.url : null);

            this.description = in.readString(this.description instanceof Utf8 ? (Utf8) this.description : null);

        } else {
            for (int i = 0; i < 3; i++) {
                switch (fieldOrder[i].pos()) {
                    case 0:
                        long size0 = in.readArrayStart();
                        java.util.List<java.lang.Long> a0 = this.tgChatIds;
                        if (a0 == null) {
                            a0 = new SpecificData.Array<java.lang.Long>(
                                (int) size0,
                                SCHEMA$.getField("tgChatIds").schema()
                            );
                            this.tgChatIds = a0;
                        } else {
                            a0.clear();
                        }
                        SpecificData.Array<java.lang.Long> ga0 =
                            (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Long>) a0 : null);
                        for (; 0 < size0; size0 = in.arrayNext()) {
                            for (; size0 != 0; size0--) {
                                java.lang.Long e0 = (ga0 != null ? ga0.peek() : null);
                                e0 = in.readLong();
                                a0.add(e0);
                            }
                        }
                        break;

                    case 1:
                        this.url = in.readString(this.url instanceof Utf8 ? (Utf8) this.url : null);
                        break;

                    case 2:
                        this.description =
                            in.readString(this.description instanceof Utf8 ? (Utf8) this.description : null);
                        break;

                    default:
                        throw new java.io.IOException("Corrupt ResolvingDecoder.");
                }
            }
        }
    }
}










