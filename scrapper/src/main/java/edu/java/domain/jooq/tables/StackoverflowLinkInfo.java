/*
 * This file is generated by jOOQ.
 */

package edu.java.domain.jooq.tables;

import edu.java.domain.jooq.DefaultSchema;
import edu.java.domain.jooq.tables.records.StackoverflowLinkInfoRecord;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class StackoverflowLinkInfo extends TableImpl<StackoverflowLinkInfoRecord> {

    public static final StackoverflowLinkInfo STACKOVERFLOW_LINK_INFO = new StackoverflowLinkInfo();
    private static final long serialVersionUID = 1L;
    public final TableField<StackoverflowLinkInfoRecord, Long> ID =
        createField(DSL.name("ID"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");
    public final TableField<StackoverflowLinkInfoRecord, Long> LINK_ID =
        createField(DSL.name("LINK_ID"), SQLDataType.BIGINT.nullable(false), this, "");
    public final TableField<StackoverflowLinkInfoRecord, Integer> ANSWERS_COUNT =
        createField(DSL.name("ANSWERS_COUNT"), SQLDataType.INTEGER.nullable(false), this, "");

    private StackoverflowLinkInfo(Name alias, Table<StackoverflowLinkInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private StackoverflowLinkInfo(Name alias, Table<StackoverflowLinkInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public StackoverflowLinkInfo(String alias) {
        this(DSL.name(alias), STACKOVERFLOW_LINK_INFO);
    }

    public StackoverflowLinkInfo(Name alias) {
        this(alias, STACKOVERFLOW_LINK_INFO);
    }

    public StackoverflowLinkInfo() {
        this(DSL.name("STACKOVERFLOW_LINK_INFO"), null);
    }

    @Override
    @NotNull
    public Class<StackoverflowLinkInfoRecord> getRecordType() {
        return StackoverflowLinkInfoRecord.class;
    }

    @Override
    @Nullable
    public Schema getSchema() {
        return aliased() ? null : DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    @NotNull
    public StackoverflowLinkInfo as(String alias) {
        return new StackoverflowLinkInfo(DSL.name(alias), this);
    }

    @Override
    @NotNull
    public StackoverflowLinkInfo as(Name alias) {
        return new StackoverflowLinkInfo(alias, this);
    }

    @Override
    @NotNull
    public StackoverflowLinkInfo as(Table<?> alias) {
        return new StackoverflowLinkInfo(alias.getQualifiedName(), this);
    }

    @Override
    @NotNull
    public StackoverflowLinkInfo rename(String name) {
        return new StackoverflowLinkInfo(DSL.name(name), null);
    }

    @Override
    @NotNull
    public StackoverflowLinkInfo rename(Name name) {
        return new StackoverflowLinkInfo(name, null);
    }

    @Override
    @NotNull
    public StackoverflowLinkInfo rename(Table<?> name) {
        return new StackoverflowLinkInfo(name.getQualifiedName(), null);
    }
}
