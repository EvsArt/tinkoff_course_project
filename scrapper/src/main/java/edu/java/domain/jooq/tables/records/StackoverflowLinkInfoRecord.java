/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.tables.records;


import edu.java.domain.jooq.tables.StackoverflowLinkInfo;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class StackoverflowLinkInfoRecord extends TableRecordImpl<StackoverflowLinkInfoRecord> {

    private static final long serialVersionUID = 1L;

    public void setId(@Nullable Long value) {
        set(0, value);
    }

    @Nullable
    public Long getId() {
        return (Long) get(0);
    }

    public void setLinkId(@NotNull Long value) {
        set(1, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getLinkId() {
        return (Long) get(1);
    }

    public void setAnswersCount(@NotNull Integer value) {
        set(2, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getAnswersCount() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public StackoverflowLinkInfoRecord() {
        super(StackoverflowLinkInfo.STACKOVERFLOW_LINK_INFO);
    }

    @ConstructorProperties({ "id", "linkId", "answersCount" })
    public StackoverflowLinkInfoRecord(@Nullable Long id, @NotNull Long linkId, @NotNull Integer answersCount) {
        super(StackoverflowLinkInfo.STACKOVERFLOW_LINK_INFO);

        setId(id);
        setLinkId(linkId);
        setAnswersCount(answersCount);
        resetChangedOnNotNull();
    }

    public StackoverflowLinkInfoRecord(edu.java.domain.jooq.tables.pojos.StackoverflowLinkInfo value) {
        super(StackoverflowLinkInfo.STACKOVERFLOW_LINK_INFO);

        if (value != null) {
            setId(value.getId());
            setLinkId(value.getLinkId());
            setAnswersCount(value.getAnswersCount());
            resetChangedOnNotNull();
        }
    }
}
