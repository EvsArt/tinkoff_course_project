app:

  useQueue: ${USE_KAFKA}

  scheduler:
    enable: true
    interval: 10s
    force-check-delay: 10s

  linkChecker:
    checkInterval: 1m

  controller:
    tg-chat:
      limit: 20
      interval: 30m
    links:
      limit: 20
      interval: 30m

  database-access-type: jpa

  kafka-updates-topic:
    name: updatesTopic
    partitions: 10
    replicas: 1

api:
  github:
    connection-timeout: 10s
    url: https://api.github.com
    retry:
      max-attempts: 3
      strategy: linear
      interval: 3s
      codes:
        - 403
        - 429
  stackoverflow:
    connection-timeout: 10s
    url: https://api.stackexchange.com
    uri-parameters:
      site: stackoverflow
    retry:
      max-attempts: 3
      strategy: linear
      interval: 3s
      codes:
        - 429

tgbot:
  url: ${BOT_URL}
  connection-timeout: 10s
  retry:
    max-attempts: 3
    strategy: linear
    interval: 3s
    codes:
      - 429

spring:
  application:
    name: scrapper

  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate

  liquibase:
    enabled: false

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      value-serializer: edu.java.configuration.kafka.LinkUpdateRequestSerializer
      client-id: scrapper-backend
      acks: all
      batch-size: 100000
      properties:
        delivery:
          timeout:
            ms: 60000
        linger:
          ms: 12000

server:
  port: 8080

logging:
  config: classpath:log4j2-plain.xml

springdoc:
  swagger-ui:
    path: /swagger-ui

management:
  server:
    port: 8081

  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - prometheus
      base-path: /
      path-mapping:
        prometheus: /metrics

  metrics:
    tags:
      application: ${spring.application.name}
